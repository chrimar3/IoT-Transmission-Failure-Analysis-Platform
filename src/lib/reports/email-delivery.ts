interface ReportEmailOptions {
  to: string
  userName: string
  reportName: string
  format: string
  downloadUrl?: string
  generationTime?: number
  error?: string
}

export async function sendReportEmail(options: ReportEmailOptions): Promise<void> {
  try {
    // In a real implementation, this would use a service like Resend, SendGrid, or AWS SES
    console.log('Sending report email:', {
      to: options.to,
      subject: options.error
        ? `Report Generation Failed: ${options.reportName}`
        : `Report Ready: ${options.reportName}`,
      isError: !!options.error
    })

    // Placeholder email sending logic
    if (options.error) {
      await sendErrorEmail(options)
    } else {
      await sendSuccessEmail(options)
    }

  } catch (error) {
    console.error('Failed to send report email:', error)
    throw error
  }
}

async function sendSuccessEmail(options: ReportEmailOptions): Promise<void> {
  const emailContent = {
    to: options.to,
    subject: `Your ${options.format.toUpperCase()} report is ready: ${options.reportName}`,
    html: `
      <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
        <h2 style="color: #2563eb;">Report Generated Successfully</h2>

        <p>Hello ${options.userName},</p>

        <p>Your report <strong>${options.reportName}</strong> has been generated successfully.</p>

        <div style="background-color: #f8fafc; padding: 20px; border-radius: 8px; margin: 20px 0;">
          <h3 style="margin-top: 0;">Report Details</h3>
          <ul style="list-style: none; padding: 0;">
            <li><strong>Format:</strong> ${options.format.toUpperCase()}</li>
            <li><strong>Generated:</strong> ${new Date().toLocaleString()}</li>
            ${options.generationTime ? `<li><strong>Generation Time:</strong> ${(options.generationTime / 1000).toFixed(1)}s</li>` : ''}
          </ul>
        </div>

        ${options.downloadUrl ? `
          <div style="text-align: center; margin: 30px 0;">
            <a href="${options.downloadUrl}"
               style="background-color: #2563eb; color: white; padding: 12px 24px;
                      text-decoration: none; border-radius: 6px; display: inline-block;">
              Download Report
            </a>
          </div>
        ` : ''}

        <p style="color: #64748b; font-size: 14px;">
          This link will expire in 30 days. If you need to regenerate this report,
          please visit your dashboard.
        </p>

        <hr style="border: none; border-top: 1px solid #e5e7eb; margin: 30px 0;">

        <p style="color: #64748b; font-size: 12px;">
          Generated by CU-BEMS IoT Transmission Failure Analysis Platform<br>
          Professional Tier Reporting Service
        </p>
      </div>
    `
  }

  // Simulate sending email
  console.log('Email sent successfully:', emailContent.subject)
}

async function sendErrorEmail(options: ReportEmailOptions): Promise<void> {
  const emailContent = {
    to: options.to,
    subject: `Report Generation Failed: ${options.reportName}`,
    html: `
      <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
        <h2 style="color: #dc2626;">Report Generation Failed</h2>

        <p>Hello ${options.userName},</p>

        <p>We encountered an issue while generating your report <strong>${options.reportName}</strong>.</p>

        <div style="background-color: #fef2f2; padding: 20px; border-radius: 8px; margin: 20px 0; border-left: 4px solid #dc2626;">
          <h3 style="margin-top: 0; color: #dc2626;">Error Details</h3>
          <p style="color: #7f1d1d;">${options.error}</p>
        </div>

        <p>Please try the following:</p>
        <ul>
          <li>Check that your report template is valid</li>
          <li>Ensure your data range is appropriate</li>
          <li>Try generating the report again</li>
          <li>Contact support if the issue persists</li>
        </ul>

        <div style="text-align: center; margin: 30px 0;">
          <a href="/dashboard/reports"
             style="background-color: #2563eb; color: white; padding: 12px 24px;
                    text-decoration: none; border-radius: 6px; display: inline-block;">
            Go to Reports Dashboard
          </a>
        </div>

        <hr style="border: none; border-top: 1px solid #e5e7eb; margin: 30px 0;">

        <p style="color: #64748b; font-size: 12px;">
          CU-BEMS Support Team<br>
          Professional Tier Reporting Service
        </p>
      </div>
    `
  }

  // Simulate sending email
  console.log('Error email sent:', emailContent.subject)
}

export async function sendScheduledReportEmail(
  to: string,
  userName: string,
  reportName: string,
  scheduleName: string,
  downloadUrl: string,
  nextRun: Date
): Promise<void> {
  const emailContent = {
    to,
    subject: `Scheduled Report: ${reportName}`,
    html: `
      <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
        <h2 style="color: #2563eb;">Scheduled Report Delivered</h2>

        <p>Hello ${userName},</p>

        <p>Your scheduled report <strong>${reportName}</strong> from schedule
           "<strong>${scheduleName}</strong>" is ready.</p>

        <div style="background-color: #f8fafc; padding: 20px; border-radius: 8px; margin: 20px 0;">
          <h3 style="margin-top: 0;">Schedule Details</h3>
          <ul style="list-style: none; padding: 0;">
            <li><strong>Generated:</strong> ${new Date().toLocaleString()}</li>
            <li><strong>Next Report:</strong> ${nextRun.toLocaleString()}</li>
          </ul>
        </div>

        <div style="text-align: center; margin: 30px 0;">
          <a href="${downloadUrl}"
             style="background-color: #2563eb; color: white; padding: 12px 24px;
                    text-decoration: none; border-radius: 6px; display: inline-block;">
            Download Report
          </a>
        </div>

        <p style="color: #64748b; font-size: 14px;">
          This is an automated delivery from your report schedule.
          You can manage your schedules from your dashboard.
        </p>

        <hr style="border: none; border-top: 1px solid #e5e7eb; margin: 30px 0;">

        <p style="color: #64748b; font-size: 12px;">
          CU-BEMS Automated Reporting<br>
          Professional Tier Service
        </p>
      </div>
    `
  }

  console.log('Scheduled report email sent:', emailContent.subject)
}